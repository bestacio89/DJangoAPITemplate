# name: CI  # Name of the GitHub Actions workflow

# # Enable Buildkit and let compose use it to speed up image building
# env:
#   DOCKER_BUILDKIT: 1
#   COMPOSE_DOCKER_CLI_BUILD: 1

# # Define the events that trigger this workflow
# on:
#   # Trigger on pull requests to master or main branches, ignoring changes in 'docs' directory
#   pull_request:
#     branches: ['master', 'main']
#     paths-ignore: ['docs/**']

#   # Trigger on push to master or main branches, ignoring changes in 'docs' directory
#   push:
#     branches: ['master', 'main']
#     paths-ignore: ['docs/**']

# # Define concurrency settings to ensure multiple workflows don't interfere
# concurrency:
#   group: ${{ github.head_ref || github.run_id }}  # Group by head ref or run ID
#   cancel-in-progress: true  # Cancel previous runs if a new one is triggered

# # Define jobs to run in this workflow
# jobs:
#   # Job for running linter
#   linter:
#     runs-on: ubuntu-latest  # Use Ubuntu latest version as the runner

#     steps:
#       - name: Checkout Code Repository  # Step to checkout the code repository
#         uses: actions/checkout@v4  # Use GitHub's checkout action (v4)

#       - name: Set up Python  # Step to set up Python environment
#         uses: actions/setup-python@v5  # Use GitHub's setup Python action (v5)
#         with:
#           python-version: '3.12'  # Specify Python version to use

#       - name: Run pre-commit  # Step to run pre-commit hooks
#         uses: pre-commit/action@v3.0.1  # Use pre-commit GitHub action (v3.0.1)

#   # Job for running pytest and other tests
#   pytest:
#     runs-on: ubuntu-latest  # Use Ubuntu latest version as the runner

#     steps:
#       - name: Checkout Code Repository  # Step to checkout the code repository
#         uses: actions/checkout@v4  # Use GitHub's checkout action (v4)

#       - name: Build the Stack  # Step to build the Docker stack
#         run: |
#           # docker compose -f docker-compose.local.yml build django  # Build 'django' service
#           # Note: Replace 'django' with your service name if different

#       - name: Build the docs  # Step to build the documentation
#         run: |
#           # docker compose -f docker-compose.docs.yml build docs  # Build 'docs' service
#           # Note: Replace 'docs' with your service name if different

#       - name: Run DB Migrations  # Step to run database migrations
#         run: |
#           # docker compose -f docker-compose.local.yml run --rm django python manage.py migrate
#           # Note: Replace 'django' with your service name if different
#           # Ensure manage.py is in the root directory or adjust path accordingly

#       - name: Run Django Tests  # Step to run Django tests with pytest
#         run: |
#           # docker compose -f docker-compose.local.yml run django pytest
#           # Note: Replace 'django' with your service name if different
#           # Adjust pytest command as needed (e.g., specify test directory or options)

#       - name: Tear down the Stack  # Step to tear down the Docker stack
#         run: |
#           # docker compose -f docker-compose.local.yml down
#           # Note: Replace 'docker-compose.local.yml' with your compose file name
#           # Adjust command options as needed (e.g., stop only specific services)

# # End of GitHub Actions workflow
