name: CI - Test

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['develop']
    paths-ignore: ['docs/**']
  push:
    branches: ['develop']
    paths-ignore: ['docs/**']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  TestLinter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint Code
        run: |
          flake8 .  # or other linter tool

  Testing-Features:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      CELERY_RESULT_BACKEND: ${{ secrets.CELERY_RESULT_BACKEND }}
      BUILD_ENVIRONMENT: github_ci

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run DB Migrations
        run: |
          python manage.py migrate

      - name: Run Tests
        run: |
          pytest

  CreatePR:
    needs: Testing-Features
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4
      - name: Create Pull Request from Develop to Main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth login --with-token <<< "${{ secrets.GITPR_TOKEN }}"
          gh pr create --base main --head develop --title "Merge Develop to Main" --body "Automated PR created after successful tests."
