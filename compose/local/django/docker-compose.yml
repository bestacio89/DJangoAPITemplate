version: '3.8'

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-run-stage
      args:
        BUILD_ENVIRONMENT: ${BUILD_ENVIRONMENT}
    image: my_django_app:local
    container_name: django
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    command: /start
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  db:
    image: postgres:13
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"

  celeryworker:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-run-stage
      args:
        BUILD_ENVIRONMENT: ${BUILD_ENVIRONMENT}
    image: my_django_app:local
    container_name: celeryworker
    volumes:
      - .:/app
    command: /start-celeryworker
    depends_on:
      - django
      - redis
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  celerybeat:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-run-stage
      args:
        BUILD_ENVIRONMENT: ${BUILD_ENVIRONMENT}
    image: my_django_app:local
    container_name: celerybeat
    volumes:
      - .:/app
    command: /start-celerybeat
    depends_on:
      - django
      - redis
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  flower:
    build:
      context: .
      dockerfile: Dockerfile
      target: python-run-stage
      args:
        BUILD_ENVIRONMENT: ${BUILD_ENVIRONMENT}
    image: my_django_app:local
    container_name: flower
    volumes:
      - .:/app
    command: /start.sh
    ports:
      - "5555:5555"
    depends_on:
      - django
      - redis
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

volumes:
  postgres_data:
